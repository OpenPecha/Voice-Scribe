// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recording {
  id          String       @id @default( uuid())
  fileUrl     String?    // Optional: store the URL if needed in the future
  status      Status     @default(PENDING)
  transcript  String?    
  reviewed_transcript String?
  helper_text String?
  modified_by    User?    @relation("User_modified", fields: [modified_by_id], references: [id])
  reviewed_by    User?    @relation("User_reviewed", fields: [reviewed_by_id], references: [id])
  modified_by_id String?
  reviewed_by_id String?
  createdAt   DateTime   @default(now())
  modifiedAt  DateTime   @default(now())
  updatedAt   DateTime   @default(now())
}

model User {
  id          String        @id @default( uuid())
  role        Role        @default(USER)
  username    String
  email       String      @unique
  modified Recording[] @relation("User_modified")
  reviewed Recording[] @relation("User_reviewed")
}

enum Role {
  USER
  ADMIN
  ANNOTATOR
  REVIEWER
}

enum Status {
  PENDING
  MODIFIED
  REVIEWED
}
